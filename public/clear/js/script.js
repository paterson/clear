// Generated by CoffeeScript 1.6.3
'use strict';
var App, PAYMILL_PUBLIC_KEY, controller, domain;

domain = 'http://192.241.138.60/';

App = angular.module('iframe', []);

PAYMILL_PUBLIC_KEY = '958049063517bbb61ed07adf6a91a19f';

controller = function($scope, $http, $timeout) {
  $scope.cards = {};
  $scope.transactions = {};
  $scope.stores = {};
  $scope.pay = {};
  $scope.tmp = {};
  $scope.cards.list = [];
  $scope.transactions.list = [];
  $scope.forms = {};
  $scope.forms.login = {};
  $scope.permissions = {
    loggedIn: function() {
      return ($scope.token != null) && ($scope.stores.show != null) && ($scope.just_registered == null);
    },
    cards: function() {
      return $scope.permissions.loggedIn() && ($scope.paid == null);
    },
    pay: function() {
      return $scope.permissions.loggedIn() && ($scope.cards.show != null);
    },
    choice: function() {
      return !$scope.permissions.loggedIn() && !$scope.page;
    },
    login: function() {
      return !$scope.permissions.loggedIn() && $scope.page === 'login';
    },
    card: function() {
      return !$scope.permissions.loggedIn() && $scope.page === 'card';
    },
    join_clear: function() {
      return !$scope.permissions.loggedIn() && ($scope.tmp.card.token != null);
    },
    paid: function() {
      return $scope.permissions.loggedIn() && ($scope.cards.show != null) && ($scope.paid != null);
    }
  };
  $scope.set_page = function(page) {
    return $scope.page = page;
  };
  $scope.login = function() {
    var url;
    url = "" + domain + "users/login?email=" + $scope.forms.login.email + "&password=" + $scope.forms.login.password + "&callback=JSON_CALLBACK";
    return $http.jsonp(url).success(function(data) {
      if (!data.error) {
        $scope.error = false;
        $scope.token = data.token;
        $scope.me = data.me;
        url = "" + domain + "cards?token=" + $scope.token + "&callback=JSON_CALLBACK";
        return $http.jsonp(url).success(function(data) {
          $scope.error = false;
          return $scope.cards.list = data.cards;
        }).error(function() {
          return $scope.error = true;
        });
      } else {
        return $scope.error = true;
      }
    }).error(function() {
      return $scope.error = true;
    });
  };
  $scope.logout = function() {
    return $scope.token = null;
  };
  $scope.register = function() {
    var url;
    url = "" + domain + "users/create?email=" + $scope.forms.login.email + "&password=" + $scope.forms.login.password + "&callback=JSON_CALLBACK";
    return $http.jsonp(url).success(function(data) {
      var obj;
      if (!data.error) {
        $scope.error = false;
        $scope.just_registered = true;
        $scope.token = data.token;
        obj = {
          stripe_token: '',
          last_four: '',
          type: '',
          expires: ''
        };
        return url = "" + domain + "cards/create?token=" + $scope.token;
      } else {
        return $scope.error = true;
      }
    }).error(function() {
      return $scope.error = true;
    });
  };
  $scope.isSelected = function(id) {
    if (!$scope.cards.show) {
      return false;
    }
    return $scope.cards.show.id === id;
  };
  $scope.cards.choose = function(card) {
    var _ref;
    if (((_ref = $scope.cards.show) != null ? _ref.id : void 0) === card.id) {
      return $scope.cards.show = null;
    } else {
      return $scope.cards.show = card;
    }
  };
  $scope.cards.update = function() {};
  $scope.cards.create = function() {
    var d, expires, obj, url;
    expires = $scope.forms.card.expires.split('/');
    d = new Date('20 ' + expires[1], expires[0], '31');
    obj = {
      card: {
        stripe_token: $scope.forms.card.stripe_token,
        last_four: $scope.forms.card.card_number.replace(' ', '').slice(-4),
        type: $scope.forms.card.card_type,
        expires: +d / 1000
      }
    };
    url = "" + domain + "cards/create?token=" + $scope.token;
    return $http.post(url, obj).success(function(data) {});
  };
  $scope.get_token_for_tmp_card = function() {};
  $scope.store_tmp_card = function() {};
  $scope.pay.unauthenciated = function() {};
  $scope.pay.authenciated = function() {
    var obj, url;
    obj = {
      store_id: 1,
      invoice: {
        amount: 2500,
        currency: 'EUR',
        description: 'Spotify'
      }
    };
    url = "" + domain + "invoices/create?token=" + $scope.token;
    console.log(url);
    return $http.post(url, obj).success(function(data) {
      console.log('invoice', data);
      $scope.error = false;
      obj = {
        card_id: $scope.cards.show.id,
        invoice_id: data.id
      };
      url = "" + domain + "payments/create?token=" + $scope.token;
      return $http.post(url, obj).success(function(data) {
        console.log('payment', data);
        return $scope.paid = true;
      }).error(function() {
        return $scope.error = true;
      });
    }).error(function() {
      return $scope.error = true;
    });
  };
  $scope.init = function() {
    var store_id, url;
    store_id = 1;
    url = "" + domain + "stores/" + store_id + "?callback=JSON_CALLBACK";
    return $http.jsonp(url).success(function(data) {
      console.log(data);
      $scope.error = false;
      return $scope.stores.show = data;
    }).error(function() {
      return $scope.error = true;
    });
  };
  return $scope.init();
};
