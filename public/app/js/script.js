// Generated by CoffeeScript 1.6.3
'use strict';
var App, PAYMILL_PUBLIC_KEY, controller, domain;

domain = 'http://localhost:3000/';

App = angular.module('app', []);

PAYMILL_PUBLIC_KEY = '...';

controller = function($scope, $http, $timeout) {
  $scope.cards = {};
  $scope.invoices = {};
  $scope.payments = {};
  $scope.cards.list = [];
  $scope.invoices.list = [];
  $scope.payments.list = [];
  $scope.permissions = {
    loggedIn: function() {
      return $scope.token != null;
    },
    cards: function() {
      return $scope.permissions.loggedIn() && !$scope.page || $scope.page === 'cards';
    },
    invoices: function() {
      return $scope.permissions.loggedIn() && $scope.page === 'invoices';
    },
    payments: function() {
      return $scope.permissions.loggedIn() && window.location.hash === '#payments';
    },
    "delete": function() {
      return $scope.permissions.loggedIn() && window.location.hash === '#delete';
    },
    add: function() {
      return $scope.permissions.loggedIn() && window.location.hash === '#add';
    }
  };
  $scope.set_page = function(page) {
    console.log(page);
    return $scope.page = page;
  };
  $scope.login = function() {
    return $http.post("" + domain + "users/sign_in.json?email=" + $scope.forms.login.email + "&password=" + $scope.forms.login.password).success(function(data) {
      $scope.error = false;
      $scope.token = data.token;
      return $scope.me = data.me;
    }).error(function() {
      return $scope.error = true;
    });
  };
  $scope.logout = function() {
    return $scope.token = null;
  };
  $scope.register = function() {
    return $http.post("" + domain + "users?email=" + scope.forms.register.email + "&password=" + $scope.forms.register.password).success(function(data) {
      $scope.error = false;
      $scope.token = data.token;
      return $scope.me = data.me;
    }).error(function() {
      return $scope.error = true;
    });
  };
  $scope.cards.destroy = function() {
    return $http.get("" + domain + "cards/destroy/" + $scope.cards.show.id + "?token=" + $scope.token).success(function() {
      $scope.error = false;
      return $scope.success = 'Deleted.';
    }).error(function() {
      return $scope.error = true;
    });
  };
  $scope.cards.create = function() {
    /* so need to do all these in javascript
        $('.submit-button').attr("disabled", "disabled");
    
        if (false == paymill.validateCardNumber($('.card-number').val())) {
            $(".payment-errors").text("Ungueltige Kartennummer");
            $(".submit-button").removeAttr("disabled");
            return false;
        }
    
        if (false == paymill.validateExpiry($('.card-expiry-month').val(), $('.card-expiry-year').val())) {
            $(".payment-errors").text("Ungueltiges Gueltigkeitsdatum");
            $(".submit-button").removeAttr("disabled");
            return false;
        }
    
        paymill.createToken({
            number:$('.card-number').val(),
            exp_month:$('.card-expiry-month').val(),
            exp_year:$('.card-expiry-year').val(),
            cvc:$('.card-cvc').val(),
            cardholdername:$('.card-holdername').val(),
            amount:10000,
            currency:'EUR'
        }, PaymillResponseHandler);
    
        return false;
    });
    */

    return $scope.cards.update(false);
  };
  $scope.cards.update = function(recurring) {
    if (recurring == null) {
      recurring = true;
    }
    if ($scope.token) {
      $http.get("" + domain + "cards?token=" + $scope.token).success(function(data) {
        $scope.error = false;
        return $scope.cards.list = data.cards;
      }).error(function() {
        return $scope.error = true;
      });
    }
    if (recurring) {
      return $timeout($scope.cards.update, 1000);
    }
  };
  $scope.invoices.update = function(recurring) {
    if (recurring == null) {
      recurring = true;
    }
    if ($scope.token) {
      $http.get("" + domain + "invoices?token=" + $scope.token).success(function(data) {
        $scope.error = false;
        return $scope.invoices.list = data.invoices;
      }).error(function() {
        return $scope.error = true;
      });
    }
    if (recurring) {
      return $timeout($scope.invoices.update, 1000);
    }
  };
  $scope.payments.update = function(recurring) {
    if (recurring == null) {
      recurring = true;
    }
    if ($scope.token) {
      $http.get("" + domain + "payments?token=" + $scope.token).success(function(data) {
        $scope.error = false;
        return $scope.payments.list = data.payments;
      }).error(function() {
        return $scope.error = true;
      });
    }
    if (recurring) {
      return $timeout($scope.payments.update, 1000);
    }
  };
  $scope.cards.update();
  $scope.invoices.update();
  return $scope.payments.update();
};
